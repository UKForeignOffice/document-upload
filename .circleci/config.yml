version: 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/openjdk:8-jdk

orbs:
  slack: circleci/slack@0.1.0

jobs:
  test:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: ./gradlew build

      - store_test_results:
          path: build/test-results

      - store_artifacts:
          path: build/reports
          destination: reports

      - persist_to_workspace:
          root: .
          paths:
            - build

      - slack/status:
          fail_only: "true"

  publish:
    <<: *defaults

    docker:
      - image: circleci/python:2.7-jessie

    steps:
      - checkout

      - attach_workspace:
          at: .

      - setup_remote_docker

      - run:
          name: Checkout CI Support
          command: git clone git@github.com:CautionYourBlast/ci-support.git

      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
          name: Publish docker image
          command: ci-support/docker/publish.sh fco document-upload

      - persist_to_workspace:
          root: .
          paths:
            - tag.txt

      - slack/status:
          fail_only: "true"

  deploy:
    <<: *defaults

    docker:
      - image: circleci/python:2.7-jessie

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run:
          name: Checkout CI Support
          command: git clone git@github.com:CautionYourBlast/ci-support.git

      - run:
          name: Deploy
          command: |
            TAG=`cat tag.txt`
            echo "Someday I'll deploy version ${TAG}"

      - slack/status

workflows:
  "Test, publish and deploy":
    jobs:
      - test
      - publish:
          requires:
            - test
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only:
                - master
